# Spring boot global config
sie.post.save.spring.profiles.active: prod
sie.post.save.spring.server.port: {{ ASYNC_APP_SERVER_PORT }}

# Spring boot datasource mongo config
sie.post.save.data.mongo.uri: mongodb://{{ MONGODB_SERVER_URL }}
sie.post.save.data.mongo.database: {{ MONGODB_DATABASE }}

# Spring boot datasource solr config
{% if IS_SHARDED_SOLR %}
sie.post.save.data.solr.zkhost: http://{{ ZOOK_SERVER_URL }}
sie.post.save.data.solr.host:
{% else %}
sie.post.save.data.solr.host: http://{{ SOLR_SERVER_URL}}/solr
sie.post.save.data.solr.zkhost:
{% endif %}
sie.post.save.data.solr.core: {{ SOLR_CORE }}


# Spring boot datasource config
sie.post.save.datasource.driver-class-name: org.mariadb.jdbc.Driver
sie.post.save.datasource.url: jdbc:mariadb://{{ DB_SERVER_HOST }}:{{ DB_SERVER_PORT }}/{{ DB_NAME }}
sie.post.save.datasource.name: {{ DB_NAME }}
sie.post.save.datasource.username: {{ DB_USER }}
sie.post.save.datasource.password: {{ DB_PWD }}
sie.post.save.datasource.xa.data-source-class-name: org.mariadb.jdbc.MySQLDataSource
sie.post.save.datasource.test-while-idle=true
sie.post.save.datasource.validationQuery=SELECT 1
sie.post.save.datasource.initial-size: {{ DB_INITIAL_SIZE }}
sie.post.save.datasource.max-active: {{ DB_MAX_ACTIVE }}
sie.post.save.datasource.min-idle: {{ DB_MIN_IDLE }}
sie.post.save.datasource.max-idle: {{ DB_MAX_IDLE }}

# Spring boot jpa config
sie.post.save.jpa.database-platform: org.hibernate.dialect.MySQLInnoDBDialect
sie.post.save.jpa.database: MYSQL
sie.post.save.jpa.show_sql: false
sie.post.save.jpa.properties.hibernate.cache.use_second_level_cache: false
sie.post.save.jpa.properties.hibernate.cache.use_query_cache: false
sie.post.save.jpa.properties.hibernate.generate_statistics: false
sie.post.save.jpa.properties.hibernate.event.merge.entity_copy_observer: allow


# ECM-Core specific properties
sie.post.save.logging.path: {{LOG_PATH}}
sie.post.save.logging.level: {{LOG_LEVEL}}

# Values: ASYNC, GRAYLOG,STDOUT
sie.post.save.logging.appenders: {{ LOG_APPENDERS }}
sie.post.save.logging.maxFileSize: {{ LOG_MAX_FILE_SIZE }}
sie.post.save.logging.maxHistory: {{ LOG_MAX_HISTORY }}
sie.post.save.logging.totalSizeCap: {{ LOG_TOTAL_SIZE_CAP }}

# Graylog config
sie.post.save.logging.grayLog.host: udp:{{ GRAYLOG_SERVER_HOST}}
sie.post.save.logging.grayLog.port: {{ GRAYLOG_SERVER_PORT}}
sie.post.save.logging.grayLog.gelf.version: 1.1
sie.post.save.logging.grayLog.maximumMessageSize: {{ GRAYLOG_MAXIMUM_MESSAGE_SIZE }}
sie.post.save.logging.grayLog.timestampPattern: "yyyy-MM-dd HH:mm:ss,SSSS"
sie.post.save.logging.grayLog.facility: {{ GRAYLOG_FACILITY }}
sie.post.save.logging.grayLog.extractStackTrace: true
sie.post.save.logging.grayLog.filterStackTrace: false

# config tomcat
sie.post.save.tomcat.accesslog.directory: {{ TOMCAT_ACCESS_LOG_DIRECTORY }}
sie.post.save.tomcat.accesslog.enabled: {{ TOMCAT_ACCESS_LOG_ENABLED }}
sie.post.save.tomcat.accesslog.pattern: remote_ip_address=%a http_response_code=%s request_date=%t response_time_ms=%D requested_url_path=%U

sie.post.save.xmlImport.dateFormat: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
sie.post.save.xmlImport.xsdDateFormat: yyyy-MM-dd'T'HH:mm:ss'Z'
sie.post.save.xmlImport.defaultCreatorLogin: {{ XML_IMPORT_DEFAULT_CREATOR_LOGIN }}
sie.post.save.xsltTransformation.xslLogPath: file:{{ XSLT_TRANSFORMATION_LOG_PATH }}

# Spring boot rabbitmq config
sie.post.save.spring.rabbitmq.host: {{ RABBIT_MQ_SERVER_HOST }}
sie.post.save.spring.rabbitmq.port: {{ RABBIT_MQ_SERVER_PORT }}
sie.post.save.spring.rabbitmq.user: {{ RABBIT_MQ_USER }}
sie.post.save.spring.rabbitmq.password: {{ RABBIT_MQ_PWD }}

#POST-SAVE specific properties
sie.post.save.appId: ecm-async
sie.post.save.concurrent-consumers: {{ CONCURRENT_CONSUMERS }}
sie.post.save.requeue-rejected: false
sie.post.save.solr.queue: solr


#MEDIA
sie.post.save.media.queue: export-media
sie.post.save.media.user: {{ MEDIA_API_USER}}
sie.post.save.media.password: {{ MEDIA_API_PWD}}
sie.post.save.media.host: {{ MEDIA_API_HOST}}
sie.post.save.media.port: {{ MEDIA_API_PORT}}
sie.post.save.media.protocol: {{ MEDIA_API_PROTOCOL}}
sie.post.save.media.database: {{ MEDIA_DATABASE }}
sie.post.save.media.editorMediaCollection: {{ EDITOR_MEDIA_COLLECTION }}
sie.post.save.media.metadataMediaCollection: {{ METADATA_MEDIA_COLLECTION }}
sie.post.save.media.targetDirPath: {{ TARGET_DIRECTORY_PATH }}

#xml publish
sie.post.save.xmlPublish.rest: http://{{ MARKLOGIC_SERVER_HOST }}:{{ MARKLOGIC_SERVER_PORT }}
sie.post.save.xmlPublish.user: {{ MARKLOGIC_USER }}
sie.post.save.xmlPublish.password: {{ MARKLOGIC_PWD }}
sie.post.save.xmlPublish.version: LATEST
sie.post.save.xmlPublish.path: {{ XML_PUBLISH_PATH }}
sie.post.save.xmlPublish.currentCollection: {{ XML_PUBLISH_CURRENT_COLLECTION }}
sie.post.save.xmlPublish.validCollection: {{ XML_PUBLISH_VALID_COLLECTION }}
sie.post.save.xmlPublish.mediaCollection: {{ XML_PUBLISH_MEDIA_COLLECTION }}
sie.post.save.xmlPublish.queue: publish-xml
sie.post.save.xmlPublish.host: {{ MARKLOGIC_SERVER_HOST }}
sie.post.save.xmlPublish.port: {{ MARKLOGIC_SERVER_PORT }}

# NOTIF
sie.post.save.notif.treatment: notification-treatment
sie.post.save.notif.push: notification-push

#ERM
sie.post.save.erm.url: http://{{ ERM_APP_SERVER_HOST }}:{{ ERM_APP_SERVER_PORT }}/api

#CachePreview
sie.post.save.cachePreview.queue: cache-preview

#CacheConfig
sie.post.save.cache.type: HAZELCAST
sie.post.save.cache.user: {{ HAZELCAST_GROUP_NAME }}
sie.post.save.cache.password: {{ HAZELCAST_GROUP_PWD }}
sie.post.save.cache.url: {{ HAZELCAST_SERVER_HOST }}:{{ HAZELCAST_SERVER_PORT }}
sie.post.save.cache.databaseName: {{ HAZELCAST_DATABASE }}
sie.post.save.cache.execTimeoutSec: {{ HAZELCAST_EXEC_TIMEOUT_SEC }}

#XML files upload
sie.post.save.xmlUpload.sourceDirPath: {{ XML_UPLOAD_SOURCE_DIRECTORY_PATH }}
sie.post.save.xmlUpload.targetDirPath: {{ XML_UPLOAD_TARGET_DIRECTORY_PATH }}
sie.post.save.xmlUpload.queue: upload-xml

#Env queues name prefix
sie.ecm.core.async.suffixEnv: -{{ENV}}.queue

#ASYNC
sie.ecm.core.async.enabled: {{ ASYNC_ENABLED }}
sie.ecm.core.async.threadPoolSize: {{ ASYNC_THREAD_POOL_SIZE }}
sie.ecm.core.async.timeWaiting: {{ ASYNC_TIME_WAITING }}

# xml Export
sie.post.save.xmlExport.targetDirPath: {{ XML_EXPORT_TARGET_DIRECTORY_PATH }}
sie.post.save.xmlExport.queue: export-xml

#HYSTRIX
sie.post.save.hystrix.maxConcurrentRequests: {{ HYSTRIX_MAX_CONCURRENT_REQUESTS }}

#BULK OPERATIONS
sie.post.save.bulkOperation.queue: bulk-operation
sie.post.save.bulkOperation.rabbitRestApiUrl: {{ RABBIT_MQ_REST_API_URL }}

#tree update
sie.post.save.treeUpdate.queue: tree-update

# Notifications
# Notifications processing chunk size
sie.ecm.core.notification.chunkSize: {{ NOTIFICATION_TREATEMENT_CHUNK_SIZE }}

#pagination mongo
sie.ecm.core.mongo.pageUtils.limit: {{ MONGODB_PAGE_SIZE }}
sie.ecm.core.mongo.pageUtils.removeChunkSize: {{ MONGODB_REMOVE_CHUNKS_SIZE }}

# Async transacted
sie.post.save.transacted: true

#Ecm cache monitoring
sie.ecm.core.monitoring.cacheAppHealthUrl: http://{{HAZELCAST_SERVER_HOST}}:{{HAZELCAST_SERVER_PORT}}/hazelcast/monitoring